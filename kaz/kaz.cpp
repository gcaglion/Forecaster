//#include <MyOraUtils.h>
//#include <DBConnection.h>
//#include <MyLogDefs.h>



/*int main() {

	tDebugInfo Debugpnames;
	Debugpnames.DebugLevel = 1;
	Debugpnames.DebugDest = LOG_TO_TEXT;
	strcpy(Debugpnames.fPath, "C:/temp");
	strcpy(Debugpnames.fName, "kaz.log");

	tDBConnection DBconn;
	strcpy(DBconn.DBUser, "History");
	strcpy(DBconn.DBPassword, "HistoryPwd");
	strcpy(DBconn.DBConnString, "Algo");
	DBconn.DBCtx = nullptr;

	char* vOH = getenv("ORACLE_HOME");
	char* vPath = getenv("PATH");
	printf("ORACLE_HOME=%s\nPATH=%s\n", vOH,vPath);

	if (OraConnect(&Debugpnames, &DBconn) <0) return -1;

	getchar();
    return 0;
}
*/

//#include <MyUtils.h>

/*static float CalculateCPULoad(unsigned long long idleTicks, unsigned long long totalTicks)
{
	static unsigned long long _previousTotalTicks = 0;
	static unsigned long long _previousIdleTicks = 0;

	unsigned long long totalTicksSinceLastTime = totalTicks-_previousTotalTicks;
	unsigned long long idleTicksSinceLastTime = idleTicks-_previousIdleTicks;

	float ret = 1.0f-((totalTicksSinceLastTime > 0) ? ((float)idleTicksSinceLastTime)/totalTicksSinceLastTime : 0);

	_previousTotalTicks = totalTicks;
	_previousIdleTicks = idleTicks;
	return ret;
}

static unsigned long long FileTimeToInt64(const FILETIME & ft) { return (((unsigned long long)(ft.dwHighDateTime))<<32)|((unsigned long long)ft.dwLowDateTime); }

// Returns 1.0f for "CPU fully pinned", 0.0f for "CPU idle", or somewhere in between
// You'll need to call this at regular intervals, since it measures the load between
// the previous call and the current one.  Returns -1.0 on error.
float GetCPULoad()
{
	FILETIME idleTime, kernelTime, userTime;
	return GetSystemTimes(&idleTime, &kernelTime, &userTime) ? CalculateCPULoad(FileTimeToInt64(idleTime), FileTimeToInt64(kernelTime)+FileTimeToInt64(userTime)) : -1.0f;
}
*/
/*
typedef struct sHogParms {
	int id;
	int duration;
} tHogParms;

int cpuHog(tHogParms* parms) {
	//--
	LARGE_INTEGER frequency;			// ticks per second
	LARGE_INTEGER time_start, time_end; // ticks
	double elapsedTime = 0; char elapsedTimeS[30];
	// get ticks per second
	QueryPerformanceFrequency(&frequency);
	// start timer
	QueryPerformanceCounter(&time_start);
	//--

	for (int i = 0; i<parms->duration; i++) {
		gotoxy(0, parms->id);
		printf("\r%d: %d", parms->id, i);
	}

	//-- introduce failure for odd ids
	if (parms->id%2==1) return -1;

	//-- stop timer, compute the elapsed time
	QueryPerformanceCounter(&time_end);
	elapsedTime = (time_end.QuadPart - time_start.QuadPart) * 1000.0 / frequency.QuadPart;
	ms2ts(elapsedTime, elapsedTimeS);
	printf("\nCompleted in %s ", elapsedTimeS);
	//Sleep(5000);
	return 1;
}

#include <Windows.h>
#include <vector>
#include <string>
using namespace std;
#include <stdio.h>
*/

/*int main() {
	HANDLE th;
	LPDWORD tid=0;
	const float MaxCPU = 0.6f;
	int i = 0;
	tHogParms* parms= new tHogParms;

	float CPUload = GetCPULoad();

	vector<string> cmd = { "start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe","start cpuhog.exe" };

	while (CPUload<MaxCPU && i<cmd.size() ) {
		system(cmd[i].c_str());
		Sleep(500);
		CPUload = GetCPULoad(); printf("CPU Load=%f\n", CPUload);
	}
}
*/
/*
int main(int argc, char* argv[]) {
	tHogParms* hp=new tHogParms;
	hp->id = (argc>1) ? atoi(argv[1]) : 1;
	hp->duration = (argc>2) ? atoi(argv[2]) : 1000000;
	return (cpuHog(hp) );
}

*/
/*
extern "C" __declspec(dllexport) int MTgetForecast(
	int paramCnt, char* paramOverride,
	double* pHistoryDataH, double pHistoryBaseValH,
	double* pHistoryDataL, double pHistoryBaseValL,
	double* pHistoryBW,
	double* pValidationDataH, double pValidationBaseValH,
	double* pValidationDataL, double pValidationBaseValL,
	double* pFutureDataH,
	double* pFutureDataL,
	double* pFutureBW,
	double* oPredictedDataH, double* oPredictedDataL
);

int main(int argc, char* argv[]) {
	char* paramstring = "MT4.exe --IniFile=c:/temp/tester.ini --DataParms.HistoryLen=1000 --DataParms.PredictionLen=5";
	int ret = MTgetForecast(4, paramstring, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
}
*/

//#include <MyOraUtils.h>
//#include <MyLogger.h>
/*int main(int argc, char* argv[]) {
	
	tDBConnection* DBConn=new tDBConnection;
	strcpy(DBConn->DBUser, "LogUserxxx");
	strcpy(DBConn->DBPassword, "LogPwd");
	strcpy(DBConn->DBConnString, "Algo");
	DBConn->DBCtx = NULL;

	tDebugInfo* DebugParms=new tDebugInfo;
	DebugParms->DebugLevel = 2;
	DebugParms->DebugDest = LOG_TO_TEXT;
	strcpy(DebugParms->fPath, "C:/temp");
	strcpy(DebugParms->fName, "kaz.log");
	DebugParms->DebugDB = DBConn;
	DebugParms->PauseOnError = 1;

	OraConnect(DebugParms, DBConn);
	OraDisconnect(DebugParms->DebugDB->DBCtx, 0);
	int kaz = 0;

}
*/

void loadStaticData(double** hd, double** fd, double** bw) {
	hd[0][0] = 0.96716; hd[1][0] = 0.96639; bw[0][0] = 0.00077; bw[1][0] = 0.00077;
	hd[0][1] = 0.96727; hd[1][1] = 0.96644; bw[0][1] = 0.00083; bw[1][1] = 0.00083;
	hd[0][2] = 0.96686; hd[1][2] = 0.96555; bw[0][2] = 0.00131; bw[1][2] = 0.00131;
	hd[0][3] = 0.96614; hd[1][3] = 0.96519; bw[0][3] = 0.00095; bw[1][3] = 0.00095;
	hd[0][4] = 0.96604; hd[1][4] = 0.9649; bw[0][4] = 0.00114; bw[1][4] = 0.00114;
	hd[0][5] = 0.96531; hd[1][5] = 0.965; bw[0][5] = 0.00031; bw[1][5] = 0.00031;
	hd[0][6] = 0.96568; hd[1][6] = 0.96524; bw[0][6] = 0.00044; bw[1][6] = 0.00044;
	hd[0][7] = 0.96565; hd[1][7] = 0.96539; bw[0][7] = 0.00026; bw[1][7] = 0.00026;
	hd[0][8] = 0.96573; hd[1][8] = 0.96517; bw[0][8] = 0.00056; bw[1][8] = 0.00056;
	hd[0][9] = 0.96595; hd[1][9] = 0.96561; bw[0][9] = 0.00034; bw[1][9] = 0.00034;
	hd[0][10] = 0.96599; hd[1][10] = 0.96571; bw[0][10] = 0.00028; bw[1][10] = 0.00028;
	hd[0][11] = 0.96632; hd[1][11] = 0.96579; bw[0][11] = 0.00053; bw[1][11] = 0.00053;
	hd[0][12] = 0.96631; hd[1][12] = 0.96605; bw[0][12] = 0.00026; bw[1][12] = 0.00026;
	hd[0][13] = 0.96642; hd[1][13] = 0.96611; bw[0][13] = 0.00031; bw[1][13] = 0.00031;
	hd[0][14] = 0.96657; hd[1][14] = 0.9662; bw[0][14] = 0.00037; bw[1][14] = 0.00037;
	hd[0][15] = 0.96725; hd[1][15] = 0.96632; bw[0][15] = 0.00093; bw[1][15] = 0.00093;
	hd[0][16] = 0.96766; hd[1][16] = 0.96702; bw[0][16] = 0.00064; bw[1][16] = 0.00064;
	hd[0][17] = 0.96748; hd[1][17] = 0.96673; bw[0][17] = 0.00075; bw[1][17] = 0.00075;
	hd[0][18] = 0.96776; hd[1][18] = 0.9666; bw[0][18] = 0.00116; bw[1][18] = 0.00116;
	hd[0][19] = 0.96863; hd[1][19] = 0.96683; bw[0][19] = 0.0018; bw[1][19] = 0.0018;
/*	hd[0][20] = 0.96882; hd[1][20] = 0.96809; bw[0][20] = 0.00073; bw[1][20] = 0.00073;
	hd[0][21] = 0.96951; hd[1][21] = 0.96866; bw[0][21] = 0.00085; bw[1][21] = 0.00085;
	hd[0][22] = 0.96874; hd[1][22] = 0.96809; bw[0][22] = 0.00065; bw[1][22] = 0.00065;
	hd[0][23] = 0.96862; hd[1][23] = 0.96767; bw[0][23] = 0.00095; bw[1][23] = 0.00095;
	hd[0][24] = 0.96943; hd[1][24] = 0.96776; bw[0][24] = 0.00167; bw[1][24] = 0.00167;
	hd[0][25] = 0.96883; hd[1][25] = 0.96751; bw[0][25] = 0.00132; bw[1][25] = 0.00132;
	hd[0][26] = 0.96851; hd[1][26] = 0.96633; bw[0][26] = 0.00218; bw[1][26] = 0.00218;
	hd[0][27] = 0.96745; hd[1][27] = 0.96519; bw[0][27] = 0.00226; bw[1][27] = 0.00226;
	hd[0][28] = 0.96571; hd[1][28] = 0.96268; bw[0][28] = 0.00303; bw[1][28] = 0.00303;
	hd[0][29] = 0.96373; hd[1][29] = 0.96236; bw[0][29] = 0.00137; bw[1][29] = 0.00137;
	hd[0][30] = 0.9639; hd[1][30] = 0.96275; bw[0][30] = 0.00115; bw[1][30] = 0.00115;
	hd[0][31] = 0.96409; hd[1][31] = 0.96315; bw[0][31] = 0.00094; bw[1][31] = 0.00094;
	hd[0][32] = 0.96417; hd[1][32] = 0.96299; bw[0][32] = 0.00118; bw[1][32] = 0.00118;
	hd[0][33] = 0.964; hd[1][33] = 0.96303; bw[0][33] = 0.00097; bw[1][33] = 0.00097;
	hd[0][34] = 0.96361; hd[1][34] = 0.96308; bw[0][34] = 0.00053; bw[1][34] = 0.00053;
	hd[0][35] = 0.96336; hd[1][35] = 0.96282; bw[0][35] = 0.00054; bw[1][35] = 0.00054;
	hd[0][36] = 0.96356; hd[1][36] = 0.96278; bw[0][36] = 0.00078; bw[1][36] = 0.00078;
	hd[0][37] = 0.96356; hd[1][37] = 0.96232; bw[0][37] = 0.00124; bw[1][37] = 0.00124;
	hd[0][38] = 0.96327; hd[1][38] = 0.9626; bw[0][38] = 0.00067; bw[1][38] = 0.00067;
	hd[0][39] = 0.96297; hd[1][39] = 0.96212; bw[0][39] = 0.00085; bw[1][39] = 0.00085;
	hd[0][40] = 0.96355; hd[1][40] = 0.96176; bw[0][40] = 0.00179; bw[1][40] = 0.00179;
	hd[0][41] = 0.96413; hd[1][41] = 0.96297; bw[0][41] = 0.00116; bw[1][41] = 0.00116;
	hd[0][42] = 0.96409; hd[1][42] = 0.96256; bw[0][42] = 0.00153; bw[1][42] = 0.00153;
	hd[0][43] = 0.96369; hd[1][43] = 0.96265; bw[0][43] = 0.00104; bw[1][43] = 0.00104;
	hd[0][44] = 0.9639; hd[1][44] = 0.96291; bw[0][44] = 0.00099; bw[1][44] = 0.00099;
	hd[0][45] = 0.96321; hd[1][45] = 0.96244; bw[0][45] = 0.00077; bw[1][45] = 0.00077;
	hd[0][46] = 0.96295; hd[1][46] = 0.96215; bw[0][46] = 0.0008; bw[1][46] = 0.0008;
	hd[0][47] = 0.96431; hd[1][47] = 0.96016; bw[0][47] = 0.00415; bw[1][47] = 0.00415;
	hd[0][48] = 0.96468; hd[1][48] = 0.96054; bw[0][48] = 0.00414; bw[1][48] = 0.00414;
	hd[0][49] = 0.96605; hd[1][49] = 0.96397; bw[0][49] = 0.00208; bw[1][49] = 0.00208;
	hd[0][50] = 0.96476; hd[1][50] = 0.96358; bw[0][50] = 0.00118; bw[1][50] = 0.00118;
	hd[0][51] = 0.96488; hd[1][51] = 0.96402; bw[0][51] = 0.00086; bw[1][51] = 0.00086;
	hd[0][52] = 0.9649; hd[1][52] = 0.96392; bw[0][52] = 0.00098; bw[1][52] = 0.00098;
	hd[0][53] = 0.9654; hd[1][53] = 0.9639; bw[0][53] = 0.0015; bw[1][53] = 0.0015;
	hd[0][54] = 0.96536; hd[1][54] = 0.96463; bw[0][54] = 0.00073; bw[1][54] = 0.00073;
	hd[0][55] = 0.96534; hd[1][55] = 0.96473; bw[0][55] = 0.00061; bw[1][55] = 0.00061;
	hd[0][56] = 0.96535; hd[1][56] = 0.96431; bw[0][56] = 0.00104; bw[1][56] = 0.00104;
	hd[0][57] = 0.96524; hd[1][57] = 0.96477; bw[0][57] = 0.00047; bw[1][57] = 0.00047;
	hd[0][58] = 0.96533; hd[1][58] = 0.96483; bw[0][58] = 0.0005; bw[1][58] = 0.0005;
	hd[0][59] = 0.96518; hd[1][59] = 0.9638; bw[0][59] = 0.00138; bw[1][59] = 0.00138;
	hd[0][60] = 0.96412; hd[1][60] = 0.96348; bw[0][60] = 0.00064; bw[1][60] = 0.00064;
	hd[0][61] = 0.96405; hd[1][61] = 0.96339; bw[0][61] = 0.00066; bw[1][61] = 0.00066;
	hd[0][62] = 0.96372; hd[1][62] = 0.9633; bw[0][62] = 0.00042; bw[1][62] = 0.00042;
	hd[0][63] = 0.96382; hd[1][63] = 0.9632; bw[0][63] = 0.00062; bw[1][63] = 0.00062;
	hd[0][64] = 0.96346; hd[1][64] = 0.96253; bw[0][64] = 0.00093; bw[1][64] = 0.00093;
	hd[0][65] = 0.96285; hd[1][65] = 0.96147; bw[0][65] = 0.00138; bw[1][65] = 0.00138;
	hd[0][66] = 0.9634; hd[1][66] = 0.96161; bw[0][66] = 0.00179; bw[1][66] = 0.00179;
	hd[0][67] = 0.96463; hd[1][67] = 0.96241; bw[0][67] = 0.00222; bw[1][67] = 0.00222;
	hd[0][68] = 0.96568; hd[1][68] = 0.96398; bw[0][68] = 0.0017; bw[1][68] = 0.0017;
	hd[0][69] = 0.9667; hd[1][69] = 0.96389; bw[0][69] = 0.00281; bw[1][69] = 0.00281;
	hd[0][70] = 0.96689; hd[1][70] = 0.9644; bw[0][70] = 0.00249; bw[1][70] = 0.00249;
	hd[0][71] = 0.96605; hd[1][71] = 0.96415; bw[0][71] = 0.0019; bw[1][71] = 0.0019;
	hd[0][72] = 0.9668; hd[1][72] = 0.96515; bw[0][72] = 0.00165; bw[1][72] = 0.00165;
	hd[0][73] = 0.96771; hd[1][73] = 0.96622; bw[0][73] = 0.00149; bw[1][73] = 0.00149;
	hd[0][74] = 0.9685; hd[1][74] = 0.96695; bw[0][74] = 0.00155; bw[1][74] = 0.00155;
	hd[0][75] = 0.96863; hd[1][75] = 0.96799; bw[0][75] = 0.00064; bw[1][75] = 0.00064;
	hd[0][76] = 0.96818; hd[1][76] = 0.96694; bw[0][76] = 0.00124; bw[1][76] = 0.00124;
	hd[0][77] = 0.96756; hd[1][77] = 0.96655; bw[0][77] = 0.00101; bw[1][77] = 0.00101;
	hd[0][78] = 0.96688; hd[1][78] = 0.96652; bw[0][78] = 0.00036; bw[1][78] = 0.00036;
	hd[0][79] = 0.96717; hd[1][79] = 0.9665; bw[0][79] = 0.00067; bw[1][79] = 0.00067;
	hd[0][80] = 0.96726; hd[1][80] = 0.96603; bw[0][80] = 0.00123; bw[1][80] = 0.00123;
	hd[0][81] = 0.96722; hd[1][81] = 0.9662; bw[0][81] = 0.00102; bw[1][81] = 0.00102;
	hd[0][82] = 0.96718; hd[1][82] = 0.96653; bw[0][82] = 0.00065; bw[1][82] = 0.00065;
	hd[0][83] = 0.96765; hd[1][83] = 0.96682; bw[0][83] = 0.00083; bw[1][83] = 0.00083;
	hd[0][84] = 0.96735; hd[1][84] = 0.96675; bw[0][84] = 0.0006; bw[1][84] = 0.0006;
	hd[0][85] = 0.96715; hd[1][85] = 0.96671; bw[0][85] = 0.00044; bw[1][85] = 0.00044;
	hd[0][86] = 0.96683; hd[1][86] = 0.96658; bw[0][86] = 0.00025; bw[1][86] = 0.00025;
	hd[0][87] = 0.96703; hd[1][87] = 0.96645; bw[0][87] = 0.00058; bw[1][87] = 0.00058;
	hd[0][88] = 0.96705; hd[1][88] = 0.96622; bw[0][88] = 0.00083; bw[1][88] = 0.00083;
	hd[0][89] = 0.96704; hd[1][89] = 0.96579; bw[0][89] = 0.00125; bw[1][89] = 0.00125;
	hd[0][90] = 0.96815; hd[1][90] = 0.96632; bw[0][90] = 0.00183; bw[1][90] = 0.00183;
	hd[0][91] = 0.96989; hd[1][91] = 0.96787; bw[0][91] = 0.00202; bw[1][91] = 0.00202;
	hd[0][92] = 0.96981; hd[1][92] = 0.96822; bw[0][92] = 0.00159; bw[1][92] = 0.00159;
	hd[0][93] = 0.96996; hd[1][93] = 0.96887; bw[0][93] = 0.00109; bw[1][93] = 0.00109;
	hd[0][94] = 0.96942; hd[1][94] = 0.96773; bw[0][94] = 0.00169; bw[1][94] = 0.00169;
	hd[0][95] = 0.96842; hd[1][95] = 0.9628; bw[0][95] = 0.00562; bw[1][95] = 0.00562;
	hd[0][96] = 0.96507; hd[1][96] = 0.96332; bw[0][96] = 0.00175; bw[1][96] = 0.00175;
	hd[0][97] = 0.96634; hd[1][97] = 0.96368; bw[0][97] = 0.00266; bw[1][97] = 0.00266;
	hd[0][98] = 0.96537; hd[1][98] = 0.96398; bw[0][98] = 0.00139; bw[1][98] = 0.00139;
	hd[0][99] = 0.96556; hd[1][99] = 0.96451; bw[0][99] = 0.00105; bw[1][99] = 0.00105;
	hd[0][100] = 0.96476; hd[1][100] = 0.96371; bw[0][100] = 0.00105; bw[1][100] = 0.00105;
	hd[0][101] = 0.96405; hd[1][101] = 0.96362; bw[0][101] = 0.00043; bw[1][101] = 0.00043;
	hd[0][102] = 0.96387; hd[1][102] = 0.96328; bw[0][102] = 0.00059; bw[1][102] = 0.00059;
	hd[0][103] = 0.96375; hd[1][103] = 0.96302; bw[0][103] = 0.00073; bw[1][103] = 0.00073;
	hd[0][104] = 0.96382; hd[1][104] = 0.96251; bw[0][104] = 0.00131; bw[1][104] = 0.00131;
	hd[0][105] = 0.96407; hd[1][105] = 0.96288; bw[0][105] = 0.00119; bw[1][105] = 0.00119;
	hd[0][106] = 0.96364; hd[1][106] = 0.96306; bw[0][106] = 0.00058; bw[1][106] = 0.00058;
	hd[0][107] = 0.96402; hd[1][107] = 0.96324; bw[0][107] = 0.00078; bw[1][107] = 0.00078;
	hd[0][108] = 0.96428; hd[1][108] = 0.96362; bw[0][108] = 0.00066; bw[1][108] = 0.00066;
	hd[0][109] = 0.96466; hd[1][109] = 0.96406; bw[0][109] = 0.0006; bw[1][109] = 0.0006;
	hd[0][110] = 0.96455; hd[1][110] = 0.96399; bw[0][110] = 0.00056; bw[1][110] = 0.00056;
	hd[0][111] = 0.96457; hd[1][111] = 0.96408; bw[0][111] = 0.00049; bw[1][111] = 0.00049;
	hd[0][112] = 0.96462; hd[1][112] = 0.96411; bw[0][112] = 0.00051; bw[1][112] = 0.00051;
	hd[0][113] = 0.96552; hd[1][113] = 0.96423; bw[0][113] = 0.00129; bw[1][113] = 0.00129;
	hd[0][114] = 0.96578; hd[1][114] = 0.9643; bw[0][114] = 0.00148; bw[1][114] = 0.00148;
	hd[0][115] = 0.96469; hd[1][115] = 0.96294; bw[0][115] = 0.00175; bw[1][115] = 0.00175;
	hd[0][116] = 0.96419; hd[1][116] = 0.96274; bw[0][116] = 0.00145; bw[1][116] = 0.00145;
	hd[0][117] = 0.96323; hd[1][117] = 0.96202; bw[0][117] = 0.00121; bw[1][117] = 0.00121;
	hd[0][118] = 0.96214; hd[1][118] = 0.95939; bw[0][118] = 0.00275; bw[1][118] = 0.00275;
	hd[0][119] = 0.96108; hd[1][119] = 0.96012; bw[0][119] = 0.00096; bw[1][119] = 0.00096;
	hd[0][120] = 0.9616; hd[1][120] = 0.96069; bw[0][120] = 0.00091; bw[1][120] = 0.00091;
	hd[0][121] = 0.96307; hd[1][121] = 0.96068; bw[0][121] = 0.00239; bw[1][121] = 0.00239;
	hd[0][122] = 0.9634; hd[1][122] = 0.96228; bw[0][122] = 0.00112; bw[1][122] = 0.00112;
	hd[0][123] = 0.96289; hd[1][123] = 0.96235; bw[0][123] = 0.00054; bw[1][123] = 0.00054;
	hd[0][124] = 0.9626; hd[1][124] = 0.96171; bw[0][124] = 0.00089; bw[1][124] = 0.00089;
	hd[0][125] = 0.96253; hd[1][125] = 0.96178; bw[0][125] = 0.00075; bw[1][125] = 0.00075;
	hd[0][126] = 0.9623; hd[1][126] = 0.96177; bw[0][126] = 0.00053; bw[1][126] = 0.00053;
	hd[0][127] = 0.96276; hd[1][127] = 0.96191; bw[0][127] = 0.00085; bw[1][127] = 0.00085;
	hd[0][128] = 0.96258; hd[1][128] = 0.96178; bw[0][128] = 0.0008; bw[1][128] = 0.0008;
	hd[0][129] = 0.96264; hd[1][129] = 0.96191; bw[0][129] = 0.00073; bw[1][129] = 0.00073;
	hd[0][130] = 0.96326; hd[1][130] = 0.96251; bw[0][130] = 0.00075; bw[1][130] = 0.00075;
	hd[0][131] = 0.96334; hd[1][131] = 0.96206; bw[0][131] = 0.00128; bw[1][131] = 0.00128;
	hd[0][132] = 0.96215; hd[1][132] = 0.95891; bw[0][132] = 0.00324; bw[1][132] = 0.00324;
	hd[0][133] = 0.95971; hd[1][133] = 0.95866; bw[0][133] = 0.00105; bw[1][133] = 0.00105;
	hd[0][134] = 0.95982; hd[1][134] = 0.95921; bw[0][134] = 0.00061; bw[1][134] = 0.00061;
	hd[0][135] = 0.96015; hd[1][135] = 0.95959; bw[0][135] = 0.00056; bw[1][135] = 0.00056;
	hd[0][136] = 0.96019; hd[1][136] = 0.95926; bw[0][136] = 0.00093; bw[1][136] = 0.00093;
	hd[0][137] = 0.96016; hd[1][137] = 0.95881; bw[0][137] = 0.00135; bw[1][137] = 0.00135;
	hd[0][138] = 0.96034; hd[1][138] = 0.95625; bw[0][138] = 0.00409; bw[1][138] = 0.00409;
	hd[0][139] = 0.95788; hd[1][139] = 0.95654; bw[0][139] = 0.00134; bw[1][139] = 0.00134;
	hd[0][140] = 0.9577; hd[1][140] = 0.9539; bw[0][140] = 0.0038; bw[1][140] = 0.0038;
	hd[0][141] = 0.95505; hd[1][141] = 0.95383; bw[0][141] = 0.00122; bw[1][141] = 0.00122;
	hd[0][142] = 0.95486; hd[1][142] = 0.95368; bw[0][142] = 0.00118; bw[1][142] = 0.00118;
	hd[0][143] = 0.95519; hd[1][143] = 0.95287; bw[0][143] = 0.00232; bw[1][143] = 0.00232;
	hd[0][144] = 0.95455; hd[1][144] = 0.95273; bw[0][144] = 0.00182; bw[1][144] = 0.00182;
	hd[0][145] = 0.95329; hd[1][145] = 0.95228; bw[0][145] = 0.00101; bw[1][145] = 0.00101;
	hd[0][146] = 0.95394; hd[1][146] = 0.95263; bw[0][146] = 0.00131; bw[1][146] = 0.00131;
	hd[0][147] = 0.95419; hd[1][147] = 0.95256; bw[0][147] = 0.00163; bw[1][147] = 0.00163;
	hd[0][148] = 0.95429; hd[1][148] = 0.95337; bw[0][148] = 0.00092; bw[1][148] = 0.00092;
	hd[0][149] = 0.95512; hd[1][149] = 0.95335; bw[0][149] = 0.00177; bw[1][149] = 0.00177;
	hd[0][150] = 0.95507; hd[1][150] = 0.9543; bw[0][150] = 0.00077; bw[1][150] = 0.00077;
	hd[0][151] = 0.95506; hd[1][151] = 0.95454; bw[0][151] = 0.00052; bw[1][151] = 0.00052;
	hd[0][152] = 0.95501; hd[1][152] = 0.95372; bw[0][152] = 0.00129; bw[1][152] = 0.00129;
	hd[0][153] = 0.95504; hd[1][153] = 0.9545; bw[0][153] = 0.00054; bw[1][153] = 0.00054;
	hd[0][154] = 0.95523; hd[1][154] = 0.95487; bw[0][154] = 0.00036; bw[1][154] = 0.00036;
	hd[0][155] = 0.95508; hd[1][155] = 0.95454; bw[0][155] = 0.00054; bw[1][155] = 0.00054;
	hd[0][156] = 0.95536; hd[1][156] = 0.95499; bw[0][156] = 0.00037; bw[1][156] = 0.00037;
	hd[0][157] = 0.95551; hd[1][157] = 0.95499; bw[0][157] = 0.00052; bw[1][157] = 0.00052;
	hd[0][158] = 0.95559; hd[1][158] = 0.95533; bw[0][158] = 0.00026; bw[1][158] = 0.00026;
	hd[0][159] = 0.95556; hd[1][159] = 0.95536; bw[0][159] = 0.0002; bw[1][159] = 0.0002;
	hd[0][160] = 0.95594; hd[1][160] = 0.9555; bw[0][160] = 0.00044; bw[1][160] = 0.00044;
	hd[0][161] = 0.95598; hd[1][161] = 0.95488; bw[0][161] = 0.0011; bw[1][161] = 0.0011;
	hd[0][162] = 0.95535; hd[1][162] = 0.95358; bw[0][162] = 0.00177; bw[1][162] = 0.00177;
	hd[0][163] = 0.95484; hd[1][163] = 0.95358; bw[0][163] = 0.00126; bw[1][163] = 0.00126;
	hd[0][164] = 0.95396; hd[1][164] = 0.95283; bw[0][164] = 0.00113; bw[1][164] = 0.00113;
	hd[0][165] = 0.95462; hd[1][165] = 0.95322; bw[0][165] = 0.0014; bw[1][165] = 0.0014;
	hd[0][166] = 0.95469; hd[1][166] = 0.95349; bw[0][166] = 0.0012; bw[1][166] = 0.0012;
	hd[0][167] = 0.95372; hd[1][167] = 0.95282; bw[0][167] = 0.0009; bw[1][167] = 0.0009;
	hd[0][168] = 0.95386; hd[1][168] = 0.95287; bw[0][168] = 0.00099; bw[1][168] = 0.00099;
	hd[0][169] = 0.95523; hd[1][169] = 0.95315; bw[0][169] = 0.00208; bw[1][169] = 0.00208;
	hd[0][170] = 0.95497; hd[1][170] = 0.95357; bw[0][170] = 0.0014; bw[1][170] = 0.0014;
	hd[0][171] = 0.95497; hd[1][171] = 0.95446; bw[0][171] = 0.00051; bw[1][171] = 0.00051;
	hd[0][172] = 0.9553; hd[1][172] = 0.95443; bw[0][172] = 0.00087; bw[1][172] = 0.00087;
	hd[0][173] = 0.95564; hd[1][173] = 0.95508; bw[0][173] = 0.00056; bw[1][173] = 0.00056;
	hd[0][174] = 0.95555; hd[1][174] = 0.95511; bw[0][174] = 0.00044; bw[1][174] = 0.00044;
	hd[0][175] = 0.95566; hd[1][175] = 0.95525; bw[0][175] = 0.00041; bw[1][175] = 0.00041;
	hd[0][176] = 0.95558; hd[1][176] = 0.95395; bw[0][176] = 0.00163; bw[1][176] = 0.00163;
	hd[0][177] = 0.95525; hd[1][177] = 0.95469; bw[0][177] = 0.00056; bw[1][177] = 0.00056;
	hd[0][178] = 0.955; hd[1][178] = 0.95453; bw[0][178] = 0.00047; bw[1][178] = 0.00047;
	hd[0][179] = 0.95494; hd[1][179] = 0.95458; bw[0][179] = 0.00036; bw[1][179] = 0.00036;
	hd[0][180] = 0.95537; hd[1][180] = 0.95461; bw[0][180] = 0.00076; bw[1][180] = 0.00076;
	hd[0][181] = 0.95555; hd[1][181] = 0.95469; bw[0][181] = 0.00086; bw[1][181] = 0.00086;
	hd[0][182] = 0.9565; hd[1][182] = 0.95478; bw[0][182] = 0.00172; bw[1][182] = 0.00172;
	hd[0][183] = 0.95624; hd[1][183] = 0.95578; bw[0][183] = 0.00046; bw[1][183] = 0.00046;
	hd[0][184] = 0.95619; hd[1][184] = 0.95534; bw[0][184] = 0.00085; bw[1][184] = 0.00085;
	hd[0][185] = 0.95569; hd[1][185] = 0.9545; bw[0][185] = 0.00119; bw[1][185] = 0.00119;
	hd[0][186] = 0.9569; hd[1][186] = 0.95487; bw[0][186] = 0.00203; bw[1][186] = 0.00203;
	hd[0][187] = 0.95732; hd[1][187] = 0.95609; bw[0][187] = 0.00123; bw[1][187] = 0.00123;
	hd[0][188] = 0.95786; hd[1][188] = 0.95611; bw[0][188] = 0.00175; bw[1][188] = 0.00175;
	hd[0][189] = 0.95845; hd[1][189] = 0.95754; bw[0][189] = 0.00091; bw[1][189] = 0.00091;
	hd[0][190] = 0.96202; hd[1][190] = 0.95764; bw[0][190] = 0.00438; bw[1][190] = 0.00438;
	hd[0][191] = 0.9615; hd[1][191] = 0.9564; bw[0][191] = 0.0051; bw[1][191] = 0.0051;
	hd[0][192] = 0.95772; hd[1][192] = 0.95569; bw[0][192] = 0.00203; bw[1][192] = 0.00203;
	hd[0][193] = 0.9563; hd[1][193] = 0.94924; bw[0][193] = 0.00706; bw[1][193] = 0.00706;
	hd[0][194] = 0.9518; hd[1][194] = 0.94963; bw[0][194] = 0.00217; bw[1][194] = 0.00217;
	hd[0][195] = 0.95135; hd[1][195] = 0.94999; bw[0][195] = 0.00136; bw[1][195] = 0.00136;
	hd[0][196] = 0.95164; hd[1][196] = 0.95055; bw[0][196] = 0.00109; bw[1][196] = 0.00109;
	hd[0][197] = 0.95211; hd[1][197] = 0.95119; bw[0][197] = 0.00092; bw[1][197] = 0.00092;
	hd[0][198] = 0.95187; hd[1][198] = 0.95107; bw[0][198] = 0.0008; bw[1][198] = 0.0008;
	hd[0][199] = 0.95159; hd[1][199] = 0.95107; bw[0][199] = 0.00052; bw[1][199] = 0.00052;
	hd[0][200] = 0.95135; hd[1][200] = 0.95066; bw[0][200] = 0.00069; bw[1][200] = 0.00069;
	hd[0][201] = 0.95155; hd[1][201] = 0.95091; bw[0][201] = 0.00064; bw[1][201] = 0.00064;
	hd[0][202] = 0.95154; hd[1][202] = 0.95118; bw[0][202] = 0.00036; bw[1][202] = 0.00036;
	hd[0][203] = 0.9522; hd[1][203] = 0.95117; bw[0][203] = 0.00103; bw[1][203] = 0.00103;
	hd[0][204] = 0.95174; hd[1][204] = 0.95115; bw[0][204] = 0.00059; bw[1][204] = 0.00059;
	hd[0][205] = 0.95144; hd[1][205] = 0.95041; bw[0][205] = 0.00103; bw[1][205] = 0.00103;
	hd[0][206] = 0.95176; hd[1][206] = 0.95124; bw[0][206] = 0.00052; bw[1][206] = 0.00052;
	hd[0][207] = 0.95152; hd[1][207] = 0.95117; bw[0][207] = 0.00035; bw[1][207] = 0.00035;
	hd[0][208] = 0.95125; hd[1][208] = 0.95038; bw[0][208] = 0.00087; bw[1][208] = 0.00087;
	hd[0][209] = 0.95079; hd[1][209] = 0.94927; bw[0][209] = 0.00152; bw[1][209] = 0.00152;
	hd[0][210] = 0.951; hd[1][210] = 0.94921; bw[0][210] = 0.00179; bw[1][210] = 0.00179;
	hd[0][211] = 0.9512; hd[1][211] = 0.95038; bw[0][211] = 0.00082; bw[1][211] = 0.00082;
	hd[0][212] = 0.95093; hd[1][212] = 0.94982; bw[0][212] = 0.00111; bw[1][212] = 0.00111;
	hd[0][213] = 0.95032; hd[1][213] = 0.94891; bw[0][213] = 0.00141; bw[1][213] = 0.00141;
	hd[0][214] = 0.95; hd[1][214] = 0.94892; bw[0][214] = 0.00108; bw[1][214] = 0.00108;
	hd[0][215] = 0.94973; hd[1][215] = 0.9479; bw[0][215] = 0.00183; bw[1][215] = 0.00183;
	hd[0][216] = 0.94882; hd[1][216] = 0.94697; bw[0][216] = 0.00185; bw[1][216] = 0.00185;
	hd[0][217] = 0.94774; hd[1][217] = 0.94653; bw[0][217] = 0.00121; bw[1][217] = 0.00121;
	hd[0][218] = 0.94814; hd[1][218] = 0.94671; bw[0][218] = 0.00143; bw[1][218] = 0.00143;
	hd[0][219] = 0.94682; hd[1][219] = 0.9454; bw[0][219] = 0.00142; bw[1][219] = 0.00142;
	hd[0][220] = 0.94615; hd[1][220] = 0.94468; bw[0][220] = 0.00147; bw[1][220] = 0.00147;
	hd[0][221] = 0.94552; hd[1][221] = 0.94376; bw[0][221] = 0.00176; bw[1][221] = 0.00176;
	hd[0][222] = 0.94522; hd[1][222] = 0.94389; bw[0][222] = 0.00133; bw[1][222] = 0.00133;
	hd[0][223] = 0.94581; hd[1][223] = 0.94499; bw[0][223] = 0.00082; bw[1][223] = 0.00082;
	hd[0][224] = 0.94557; hd[1][224] = 0.94451; bw[0][224] = 0.00106; bw[1][224] = 0.00106;
	hd[0][225] = 0.94559; hd[1][225] = 0.94504; bw[0][225] = 0.00055; bw[1][225] = 0.00055;
	hd[0][226] = 0.94521; hd[1][226] = 0.94455; bw[0][226] = 0.00066; bw[1][226] = 0.00066;
	hd[0][227] = 0.94588; hd[1][227] = 0.94444; bw[0][227] = 0.00144; bw[1][227] = 0.00144;
	hd[0][228] = 0.94634; hd[1][228] = 0.94555; bw[0][228] = 0.00079; bw[1][228] = 0.00079;
	hd[0][229] = 0.94611; hd[1][229] = 0.94603; bw[0][229] = 0.00008; bw[1][229] = 0.00008;
	hd[0][230] = 0.94602; hd[1][230] = 0.94554; bw[0][230] = 0.00048; bw[1][230] = 0.00048;
	hd[0][231] = 0.94604; hd[1][231] = 0.94571; bw[0][231] = 0.00033; bw[1][231] = 0.00033;
	hd[0][232] = 0.94656; hd[1][232] = 0.94588; bw[0][232] = 0.00068; bw[1][232] = 0.00068;
	hd[0][233] = 0.94717; hd[1][233] = 0.9458; bw[0][233] = 0.00137; bw[1][233] = 0.00137;
	hd[0][234] = 0.94744; hd[1][234] = 0.94563; bw[0][234] = 0.00181; bw[1][234] = 0.00181;
	hd[0][235] = 0.94654; hd[1][235] = 0.94548; bw[0][235] = 0.00106; bw[1][235] = 0.00106;
	hd[0][236] = 0.94578; hd[1][236] = 0.94455; bw[0][236] = 0.00123; bw[1][236] = 0.00123;
	hd[0][237] = 0.94608; hd[1][237] = 0.94454; bw[0][237] = 0.00154; bw[1][237] = 0.00154;
	hd[0][238] = 0.94668; hd[1][238] = 0.94578; bw[0][238] = 0.0009; bw[1][238] = 0.0009;
	hd[0][239] = 0.94659; hd[1][239] = 0.94509; bw[0][239] = 0.0015; bw[1][239] = 0.0015;
	hd[0][240] = 0.94655; hd[1][240] = 0.94525; bw[0][240] = 0.0013; bw[1][240] = 0.0013;
	hd[0][241] = 0.94673; hd[1][241] = 0.94532; bw[0][241] = 0.00141; bw[1][241] = 0.00141;
	hd[0][242] = 0.94643; hd[1][242] = 0.94529; bw[0][242] = 0.00114; bw[1][242] = 0.00114;
	hd[0][243] = 0.94689; hd[1][243] = 0.94538; bw[0][243] = 0.00151; bw[1][243] = 0.00151;
	hd[0][244] = 0.94688; hd[1][244] = 0.94585; bw[0][244] = 0.00103; bw[1][244] = 0.00103;
	hd[0][245] = 0.94642; hd[1][245] = 0.9458; bw[0][245] = 0.00062; bw[1][245] = 0.00062;
	hd[0][246] = 0.94626; hd[1][246] = 0.94584; bw[0][246] = 0.00042; bw[1][246] = 0.00042;
	hd[0][247] = 0.94651; hd[1][247] = 0.94563; bw[0][247] = 0.00088; bw[1][247] = 0.00088;
	hd[0][248] = 0.94712; hd[1][248] = 0.94487; bw[0][248] = 0.00225; bw[1][248] = 0.00225;
	hd[0][249] = 0.94741; hd[1][249] = 0.94681; bw[0][249] = 0.0006; bw[1][249] = 0.0006;
	hd[0][250] = 0.94756; hd[1][250] = 0.94704; bw[0][250] = 0.00052; bw[1][250] = 0.00052;
	hd[0][251] = 0.94782; hd[1][251] = 0.94733; bw[0][251] = 0.00049; bw[1][251] = 0.00049;
	hd[0][252] = 0.94765; hd[1][252] = 0.94722; bw[0][252] = 0.00043; bw[1][252] = 0.00043;
	hd[0][253] = 0.94764; hd[1][253] = 0.94618; bw[0][253] = 0.00146; bw[1][253] = 0.00146;
	hd[0][254] = 0.94673; hd[1][254] = 0.94644; bw[0][254] = 0.00029; bw[1][254] = 0.00029;
	hd[0][255] = 0.94677; hd[1][255] = 0.94594; bw[0][255] = 0.00083; bw[1][255] = 0.00083;
	hd[0][256] = 0.94697; hd[1][256] = 0.94617; bw[0][256] = 0.0008; bw[1][256] = 0.0008;
	hd[0][257] = 0.94647; hd[1][257] = 0.94545; bw[0][257] = 0.00102; bw[1][257] = 0.00102;
	hd[0][258] = 0.94751; hd[1][258] = 0.94608; bw[0][258] = 0.00143; bw[1][258] = 0.00143;
	hd[0][259] = 0.94781; hd[1][259] = 0.94616; bw[0][259] = 0.00165; bw[1][259] = 0.00165;
	hd[0][260] = 0.94824; hd[1][260] = 0.94696; bw[0][260] = 0.00128; bw[1][260] = 0.00128;
	hd[0][261] = 0.94829; hd[1][261] = 0.94714; bw[0][261] = 0.00115; bw[1][261] = 0.00115;
	hd[0][262] = 0.94825; hd[1][262] = 0.94734; bw[0][262] = 0.00091; bw[1][262] = 0.00091;
	hd[0][263] = 0.94764; hd[1][263] = 0.94554; bw[0][263] = 0.0021; bw[1][263] = 0.0021;
	hd[0][264] = 0.94771; hd[1][264] = 0.94566; bw[0][264] = 0.00205; bw[1][264] = 0.00205;
	hd[0][265] = 0.94889; hd[1][265] = 0.94635; bw[0][265] = 0.00254; bw[1][265] = 0.00254;
	hd[0][266] = 0.95054; hd[1][266] = 0.94831; bw[0][266] = 0.00223; bw[1][266] = 0.00223;
	hd[0][267] = 0.94971; hd[1][267] = 0.94904; bw[0][267] = 0.00067; bw[1][267] = 0.00067;
	hd[0][268] = 0.95037; hd[1][268] = 0.94925; bw[0][268] = 0.00112; bw[1][268] = 0.00112;
	hd[0][269] = 0.95144; hd[1][269] = 0.94969; bw[0][269] = 0.00175; bw[1][269] = 0.00175;
	hd[0][270] = 0.95217; hd[1][270] = 0.95096; bw[0][270] = 0.00121; bw[1][270] = 0.00121;
	hd[0][271] = 0.95246; hd[1][271] = 0.95179; bw[0][271] = 0.00067; bw[1][271] = 0.00067;
	hd[0][272] = 0.95236; hd[1][272] = 0.95163; bw[0][272] = 0.00073; bw[1][272] = 0.00073;
	hd[0][273] = 0.95246; hd[1][273] = 0.95214; bw[0][273] = 0.00032; bw[1][273] = 0.00032;
	hd[0][274] = 0.95275; hd[1][274] = 0.95237; bw[0][274] = 0.00038; bw[1][274] = 0.00038;
	hd[0][275] = 0.95301; hd[1][275] = 0.95254; bw[0][275] = 0.00047; bw[1][275] = 0.00047;
	hd[0][276] = 0.95304; hd[1][276] = 0.95228; bw[0][276] = 0.00076; bw[1][276] = 0.00076;
	hd[0][277] = 0.95254; hd[1][277] = 0.95197; bw[0][277] = 0.00057; bw[1][277] = 0.00057;
	hd[0][278] = 0.95267; hd[1][278] = 0.95198; bw[0][278] = 0.00069; bw[1][278] = 0.00069;
	hd[0][279] = 0.95292; hd[1][279] = 0.95225; bw[0][279] = 0.00067; bw[1][279] = 0.00067;
	hd[0][280] = 0.95328; hd[1][280] = 0.95266; bw[0][280] = 0.00062; bw[1][280] = 0.00062;
	hd[0][281] = 0.95359; hd[1][281] = 0.95254; bw[0][281] = 0.00105; bw[1][281] = 0.00105;
	hd[0][282] = 0.95497; hd[1][282] = 0.95245; bw[0][282] = 0.00252; bw[1][282] = 0.00252;
	hd[0][283] = 0.95539; hd[1][283] = 0.95379; bw[0][283] = 0.0016; bw[1][283] = 0.0016;
	hd[0][284] = 0.95862; hd[1][284] = 0.95433; bw[0][284] = 0.00429; bw[1][284] = 0.00429;
	hd[0][285] = 0.95905; hd[1][285] = 0.95685; bw[0][285] = 0.0022; bw[1][285] = 0.0022;
	hd[0][286] = 0.95945; hd[1][286] = 0.95781; bw[0][286] = 0.00164; bw[1][286] = 0.00164;
	hd[0][287] = 0.95883; hd[1][287] = 0.9573; bw[0][287] = 0.00153; bw[1][287] = 0.00153;
	hd[0][288] = 0.95933; hd[1][288] = 0.95746; bw[0][288] = 0.00187; bw[1][288] = 0.00187;
	hd[0][289] = 0.95944; hd[1][289] = 0.95753; bw[0][289] = 0.00191; bw[1][289] = 0.00191;
	hd[0][290] = 0.95929; hd[1][290] = 0.95767; bw[0][290] = 0.00162; bw[1][290] = 0.00162;
	hd[0][291] = 0.95836; hd[1][291] = 0.95758; bw[0][291] = 0.00078; bw[1][291] = 0.00078;
	hd[0][292] = 0.95834; hd[1][292] = 0.95656; bw[0][292] = 0.00178; bw[1][292] = 0.00178;
	hd[0][293] = 0.95831; hd[1][293] = 0.95204; bw[0][293] = 0.00627; bw[1][293] = 0.00627;
	hd[0][294] = 0.9529; hd[1][294] = 0.94977; bw[0][294] = 0.00313; bw[1][294] = 0.00313;
	hd[0][295] = 0.95184; hd[1][295] = 0.95054; bw[0][295] = 0.0013; bw[1][295] = 0.0013;
	hd[0][296] = 0.95108; hd[1][296] = 0.94963; bw[0][296] = 0.00145; bw[1][296] = 0.00145;
	hd[0][297] = 0.95104; hd[1][297] = 0.95003; bw[0][297] = 0.00101; bw[1][297] = 0.00101;
	hd[0][298] = 0.95145; hd[1][298] = 0.95102; bw[0][298] = 0.00043; bw[1][298] = 0.00043;
	hd[0][299] = 0.95149; hd[1][299] = 0.95068; bw[0][299] = 0.00081; bw[1][299] = 0.00081;
	hd[0][300] = 0.95219; hd[1][300] = 0.9509; bw[0][300] = 0.00129; bw[1][300] = 0.00129;
	hd[0][301] = 0.9513; hd[1][301] = 0.95032; bw[0][301] = 0.00098; bw[1][301] = 0.00098;
	hd[0][302] = 0.95068; hd[1][302] = 0.94891; bw[0][302] = 0.00177; bw[1][302] = 0.00177;
	hd[0][303] = 0.95052; hd[1][303] = 0.9494; bw[0][303] = 0.00112; bw[1][303] = 0.00112;
	hd[0][304] = 0.95104; hd[1][304] = 0.95; bw[0][304] = 0.00104; bw[1][304] = 0.00104;
	hd[0][305] = 0.95155; hd[1][305] = 0.95031; bw[0][305] = 0.00124; bw[1][305] = 0.00124;
	hd[0][306] = 0.95401; hd[1][306] = 0.9509; bw[0][306] = 0.00311; bw[1][306] = 0.00311;
	hd[0][307] = 0.95506; hd[1][307] = 0.95324; bw[0][307] = 0.00182; bw[1][307] = 0.00182;
	hd[0][308] = 0.95964; hd[1][308] = 0.95344; bw[0][308] = 0.0062; bw[1][308] = 0.0062;
	hd[0][309] = 0.95949; hd[1][309] = 0.95842; bw[0][309] = 0.00107; bw[1][309] = 0.00107;
	hd[0][310] = 0.96105; hd[1][310] = 0.95875; bw[0][310] = 0.0023; bw[1][310] = 0.0023;
	hd[0][311] = 0.96105; hd[1][311] = 0.95996; bw[0][311] = 0.00109; bw[1][311] = 0.00109;
	hd[0][312] = 0.96211; hd[1][312] = 0.95992; bw[0][312] = 0.00219; bw[1][312] = 0.00219;
	hd[0][313] = 0.96366; hd[1][313] = 0.95982; bw[0][313] = 0.00384; bw[1][313] = 0.00384;
	hd[0][314] = 0.96613; hd[1][314] = 0.96242; bw[0][314] = 0.00371; bw[1][314] = 0.00371;
	hd[0][315] = 0.96587; hd[1][315] = 0.96431; bw[0][315] = 0.00156; bw[1][315] = 0.00156;
	hd[0][316] = 0.96511; hd[1][316] = 0.96267; bw[0][316] = 0.00244; bw[1][316] = 0.00244;
	hd[0][317] = 0.96433; hd[1][317] = 0.96288; bw[0][317] = 0.00145; bw[1][317] = 0.00145;
	hd[0][318] = 0.96465; hd[1][318] = 0.9638; bw[0][318] = 0.00085; bw[1][318] = 0.00085;
	hd[0][319] = 0.96578; hd[1][319] = 0.96446; bw[0][319] = 0.00132; bw[1][319] = 0.00132;
	hd[0][320] = 0.96501; hd[1][320] = 0.9644; bw[0][320] = 0.00061; bw[1][320] = 0.00061;
	hd[0][321] = 0.96505; hd[1][321] = 0.96385; bw[0][321] = 0.0012; bw[1][321] = 0.0012;
	hd[0][322] = 0.96451; hd[1][322] = 0.96328; bw[0][322] = 0.00123; bw[1][322] = 0.00123;
	hd[0][323] = 0.97141; hd[1][323] = 0.96336; bw[0][323] = 0.00805; bw[1][323] = 0.00805;
	hd[0][324] = 0.97162; hd[1][324] = 0.96782; bw[0][324] = 0.0038; bw[1][324] = 0.0038;
	hd[0][325] = 0.97203; hd[1][325] = 0.96855; bw[0][325] = 0.00348; bw[1][325] = 0.00348;
	hd[0][326] = 0.97047; hd[1][326] = 0.96889; bw[0][326] = 0.00158; bw[1][326] = 0.00158;
	hd[0][327] = 0.97029; hd[1][327] = 0.96908; bw[0][327] = 0.00121; bw[1][327] = 0.00121;
	hd[0][328] = 0.97061; hd[1][328] = 0.9683; bw[0][328] = 0.00231; bw[1][328] = 0.00231;
	hd[0][329] = 0.96936; hd[1][329] = 0.96639; bw[0][329] = 0.00297; bw[1][329] = 0.00297;
	hd[0][330] = 0.96895; hd[1][330] = 0.96603; bw[0][330] = 0.00292; bw[1][330] = 0.00292;
	hd[0][331] = 0.97135; hd[1][331] = 0.96723; bw[0][331] = 0.00412; bw[1][331] = 0.00412;
	hd[0][332] = 0.97162; hd[1][332] = 0.96972; bw[0][332] = 0.0019; bw[1][332] = 0.0019;
	hd[0][333] = 0.97091; hd[1][333] = 0.96923; bw[0][333] = 0.00168; bw[1][333] = 0.00168;
	hd[0][334] = 0.9726; hd[1][334] = 0.96932; bw[0][334] = 0.00328; bw[1][334] = 0.00328;
	hd[0][335] = 0.97102; hd[1][335] = 0.96458; bw[0][335] = 0.00644; bw[1][335] = 0.00644;
	hd[0][336] = 0.9715; hd[1][336] = 0.96709; bw[0][336] = 0.00441; bw[1][336] = 0.00441;
	hd[0][337] = 0.97104; hd[1][337] = 0.96709; bw[0][337] = 0.00395; bw[1][337] = 0.00395;
	hd[0][338] = 0.96906; hd[1][338] = 0.96734; bw[0][338] = 0.00172; bw[1][338] = 0.00172;
	hd[0][339] = 0.96871; hd[1][339] = 0.96803; bw[0][339] = 0.00068; bw[1][339] = 0.00068;
	hd[0][340] = 0.97104; hd[1][340] = 0.9681; bw[0][340] = 0.00294; bw[1][340] = 0.00294;
	hd[0][341] = 0.97036; hd[1][341] = 0.96783; bw[0][341] = 0.00253; bw[1][341] = 0.00253;
	hd[0][342] = 0.96871; hd[1][342] = 0.96776; bw[0][342] = 0.00095; bw[1][342] = 0.00095;
	hd[0][343] = 0.96935; hd[1][343] = 0.96838; bw[0][343] = 0.00097; bw[1][343] = 0.00097;
	hd[0][344] = 0.96957; hd[1][344] = 0.96714; bw[0][344] = 0.00243; bw[1][344] = 0.00243;
	hd[0][345] = 0.96944; hd[1][345] = 0.96827; bw[0][345] = 0.00117; bw[1][345] = 0.00117;
	hd[0][346] = 0.96917; hd[1][346] = 0.9679; bw[0][346] = 0.00127; bw[1][346] = 0.00127;
	hd[0][347] = 0.96941; hd[1][347] = 0.96675; bw[0][347] = 0.00266; bw[1][347] = 0.00266;
	hd[0][348] = 0.96834; hd[1][348] = 0.9662; bw[0][348] = 0.00214; bw[1][348] = 0.00214;
	hd[0][349] = 0.96835; hd[1][349] = 0.96756; bw[0][349] = 0.00079; bw[1][349] = 0.00079;
	hd[0][350] = 0.96886; hd[1][350] = 0.96803; bw[0][350] = 0.00083; bw[1][350] = 0.00083;
	hd[0][351] = 0.96847; hd[1][351] = 0.96822; bw[0][351] = 0.00025; bw[1][351] = 0.00025;
	hd[0][352] = 0.96866; hd[1][352] = 0.96768; bw[0][352] = 0.00098; bw[1][352] = 0.00098;
	hd[0][353] = 0.96928; hd[1][353] = 0.96678; bw[0][353] = 0.0025; bw[1][353] = 0.0025;
	hd[0][354] = 0.9685; hd[1][354] = 0.96635; bw[0][354] = 0.00215; bw[1][354] = 0.00215;
	hd[0][355] = 0.97015; hd[1][355] = 0.96754; bw[0][355] = 0.00261; bw[1][355] = 0.00261;
	hd[0][356] = 0.97059; hd[1][356] = 0.96889; bw[0][356] = 0.0017; bw[1][356] = 0.0017;
	hd[0][357] = 0.97116; hd[1][357] = 0.96947; bw[0][357] = 0.00169; bw[1][357] = 0.00169;
	hd[0][358] = 0.97081; hd[1][358] = 0.96866; bw[0][358] = 0.00215; bw[1][358] = 0.00215;
	hd[0][359] = 0.97034; hd[1][359] = 0.96825; bw[0][359] = 0.00209; bw[1][359] = 0.00209;
	hd[0][360] = 0.96989; hd[1][360] = 0.96895; bw[0][360] = 0.00094; bw[1][360] = 0.00094;
	hd[0][361] = 0.96971; hd[1][361] = 0.96452; bw[0][361] = 0.00519; bw[1][361] = 0.00519;
	hd[0][362] = 0.96749; hd[1][362] = 0.96358; bw[0][362] = 0.00391; bw[1][362] = 0.00391;
	hd[0][363] = 0.96691; hd[1][363] = 0.96405; bw[0][363] = 0.00286; bw[1][363] = 0.00286;
	hd[0][364] = 0.96771; hd[1][364] = 0.9659; bw[0][364] = 0.00181; bw[1][364] = 0.00181;
	hd[0][365] = 0.96739; hd[1][365] = 0.96517; bw[0][365] = 0.00222; bw[1][365] = 0.00222;
	hd[0][366] = 0.96713; hd[1][366] = 0.96547; bw[0][366] = 0.00166; bw[1][366] = 0.00166;
	hd[0][367] = 0.96783; hd[1][367] = 0.96627; bw[0][367] = 0.00156; bw[1][367] = 0.00156;
	hd[0][368] = 0.96698; hd[1][368] = 0.9652; bw[0][368] = 0.00178; bw[1][368] = 0.00178;
	hd[0][369] = 0.96713; hd[1][369] = 0.96649; bw[0][369] = 0.00064; bw[1][369] = 0.00064;
	hd[0][370] = 0.96756; hd[1][370] = 0.96592; bw[0][370] = 0.00164; bw[1][370] = 0.00164;
	hd[0][371] = 0.96763; hd[1][371] = 0.96608; bw[0][371] = 0.00155; bw[1][371] = 0.00155;
	hd[0][372] = 0.96734; hd[1][372] = 0.96612; bw[0][372] = 0.00122; bw[1][372] = 0.00122;
	hd[0][373] = 0.96716; hd[1][373] = 0.96607; bw[0][373] = 0.00109; bw[1][373] = 0.00109;
	hd[0][374] = 0.96713; hd[1][374] = 0.96645; bw[0][374] = 0.00068; bw[1][374] = 0.00068;
	hd[0][375] = 0.96701; hd[1][375] = 0.96629; bw[0][375] = 0.00072; bw[1][375] = 0.00072;
	hd[0][376] = 0.9674; hd[1][376] = 0.96626; bw[0][376] = 0.00114; bw[1][376] = 0.00114;
	hd[0][377] = 0.96824; hd[1][377] = 0.967; bw[0][377] = 0.00124; bw[1][377] = 0.00124;
	hd[0][378] = 0.96823; hd[1][378] = 0.9661; bw[0][378] = 0.00213; bw[1][378] = 0.00213;
	hd[0][379] = 0.9664; hd[1][379] = 0.96508; bw[0][379] = 0.00132; bw[1][379] = 0.00132;
	hd[0][380] = 0.96627; hd[1][380] = 0.96382; bw[0][380] = 0.00245; bw[1][380] = 0.00245;
	hd[0][381] = 0.96612; hd[1][381] = 0.96417; bw[0][381] = 0.00195; bw[1][381] = 0.00195;
	hd[0][382] = 0.9671; hd[1][382] = 0.96482; bw[0][382] = 0.00228; bw[1][382] = 0.00228;
	hd[0][383] = 0.96712; hd[1][383] = 0.9649; bw[0][383] = 0.00222; bw[1][383] = 0.00222;
	hd[0][384] = 0.96562; hd[1][384] = 0.96323; bw[0][384] = 0.00239; bw[1][384] = 0.00239;
	hd[0][385] = 0.96631; hd[1][385] = 0.96301; bw[0][385] = 0.0033; bw[1][385] = 0.0033;
	hd[0][386] = 0.96611; hd[1][386] = 0.96477; bw[0][386] = 0.00134; bw[1][386] = 0.00134;
	hd[0][387] = 0.9659; hd[1][387] = 0.96497; bw[0][387] = 0.00093; bw[1][387] = 0.00093;
	hd[0][388] = 0.96518; hd[1][388] = 0.96344; bw[0][388] = 0.00174; bw[1][388] = 0.00174;
	hd[0][389] = 0.96615; hd[1][389] = 0.96432; bw[0][389] = 0.00183; bw[1][389] = 0.00183;
	hd[0][390] = 0.96627; hd[1][390] = 0.96564; bw[0][390] = 0.00063; bw[1][390] = 0.00063;
	hd[0][391] = 0.96591; hd[1][391] = 0.96536; bw[0][391] = 0.00055; bw[1][391] = 0.00055;
	hd[0][392] = 0.96559; hd[1][392] = 0.96433; bw[0][392] = 0.00126; bw[1][392] = 0.00126;
	hd[0][393] = 0.9657; hd[1][393] = 0.96498; bw[0][393] = 0.00072; bw[1][393] = 0.00072;
	hd[0][394] = 0.9663; hd[1][394] = 0.9653; bw[0][394] = 0.001; bw[1][394] = 0.001;
	hd[0][395] = 0.96625; hd[1][395] = 0.96526; bw[0][395] = 0.00099; bw[1][395] = 0.00099;
	hd[0][396] = 0.96717; hd[1][396] = 0.96603; bw[0][396] = 0.00114; bw[1][396] = 0.00114;
	hd[0][397] = 0.96703; hd[1][397] = 0.96632; bw[0][397] = 0.00071; bw[1][397] = 0.00071;
	hd[0][398] = 0.96671; hd[1][398] = 0.96614; bw[0][398] = 0.00057; bw[1][398] = 0.00057;
	hd[0][399] = 0.9668; hd[1][399] = 0.96592; bw[0][399] = 0.00088; bw[1][399] = 0.00088;
	hd[0][400] = 0.96626; hd[1][400] = 0.96518; bw[0][400] = 0.00108; bw[1][400] = 0.00108;
	hd[0][401] = 0.96625; hd[1][401] = 0.96502; bw[0][401] = 0.00123; bw[1][401] = 0.00123;
	hd[0][402] = 0.96624; hd[1][402] = 0.96517; bw[0][402] = 0.00107; bw[1][402] = 0.00107;
	hd[0][403] = 0.96718; hd[1][403] = 0.96475; bw[0][403] = 0.00243; bw[1][403] = 0.00243;
	hd[0][404] = 0.9703; hd[1][404] = 0.96637; bw[0][404] = 0.00393; bw[1][404] = 0.00393;
	hd[0][405] = 0.96979; hd[1][405] = 0.96873; bw[0][405] = 0.00106; bw[1][405] = 0.00106;
	hd[0][406] = 0.96949; hd[1][406] = 0.96854; bw[0][406] = 0.00095; bw[1][406] = 0.00095;
	hd[0][407] = 0.97065; hd[1][407] = 0.96814; bw[0][407] = 0.00251; bw[1][407] = 0.00251;
	hd[0][408] = 0.97017; hd[1][408] = 0.96909; bw[0][408] = 0.00108; bw[1][408] = 0.00108;
	hd[0][409] = 0.96966; hd[1][409] = 0.96685; bw[0][409] = 0.00281; bw[1][409] = 0.00281;
	hd[0][410] = 0.96846; hd[1][410] = 0.96609; bw[0][410] = 0.00237; bw[1][410] = 0.00237;
	hd[0][411] = 0.96982; hd[1][411] = 0.96792; bw[0][411] = 0.0019; bw[1][411] = 0.0019;
	hd[0][412] = 0.9696; hd[1][412] = 0.96666; bw[0][412] = 0.00294; bw[1][412] = 0.00294;
	hd[0][413] = 0.97028; hd[1][413] = 0.96891; bw[0][413] = 0.00137; bw[1][413] = 0.00137;
	hd[0][414] = 0.97106; hd[1][414] = 0.97002; bw[0][414] = 0.00104; bw[1][414] = 0.00104;
	hd[0][415] = 0.97128; hd[1][415] = 0.97042; bw[0][415] = 0.00086; bw[1][415] = 0.00086;
	hd[0][416] = 0.9706; hd[1][416] = 0.96978; bw[0][416] = 0.00082; bw[1][416] = 0.00082;
	hd[0][417] = 0.97074; hd[1][417] = 0.96954; bw[0][417] = 0.0012; bw[1][417] = 0.0012;
	hd[0][418] = 0.97081; hd[1][418] = 0.97025; bw[0][418] = 0.00056; bw[1][418] = 0.00056;
	hd[0][419] = 0.97085; hd[1][419] = 0.9704; bw[0][419] = 0.00045; bw[1][419] = 0.00045;
	hd[0][420] = 0.97082; hd[1][420] = 0.97012; bw[0][420] = 0.0007; bw[1][420] = 0.0007;
	hd[0][421] = 0.97085; hd[1][421] = 0.97024; bw[0][421] = 0.00061; bw[1][421] = 0.00061;
	hd[0][422] = 0.97086; hd[1][422] = 0.97052; bw[0][422] = 0.00034; bw[1][422] = 0.00034;
	hd[0][423] = 0.97092; hd[1][423] = 0.97066; bw[0][423] = 0.00026; bw[1][423] = 0.00026;
	hd[0][424] = 0.97068; hd[1][424] = 0.9696; bw[0][424] = 0.00108; bw[1][424] = 0.00108;
	hd[0][425] = 0.9703; hd[1][425] = 0.96784; bw[0][425] = 0.00246; bw[1][425] = 0.00246;
	hd[0][426] = 0.97007; hd[1][426] = 0.96797; bw[0][426] = 0.0021; bw[1][426] = 0.0021;
	hd[0][427] = 0.96941; hd[1][427] = 0.96776; bw[0][427] = 0.00165; bw[1][427] = 0.00165;
	hd[0][428] = 0.96958; hd[1][428] = 0.9686; bw[0][428] = 0.00098; bw[1][428] = 0.00098;
	hd[0][429] = 0.97062; hd[1][429] = 0.96905; bw[0][429] = 0.00157; bw[1][429] = 0.00157;
	hd[0][430] = 0.9703; hd[1][430] = 0.96871; bw[0][430] = 0.00159; bw[1][430] = 0.00159;
	hd[0][431] = 0.97002; hd[1][431] = 0.96839; bw[0][431] = 0.00163; bw[1][431] = 0.00163;
	hd[0][432] = 0.9716; hd[1][432] = 0.96909; bw[0][432] = 0.00251; bw[1][432] = 0.00251;
	hd[0][433] = 0.97104; hd[1][433] = 0.9671; bw[0][433] = 0.00394; bw[1][433] = 0.00394;
	hd[0][434] = 0.96906; hd[1][434] = 0.96789; bw[0][434] = 0.00117; bw[1][434] = 0.00117;
	hd[0][435] = 0.97018; hd[1][435] = 0.96854; bw[0][435] = 0.00164; bw[1][435] = 0.00164;
	hd[0][436] = 0.97049; hd[1][436] = 0.96959; bw[0][436] = 0.0009; bw[1][436] = 0.0009;
	hd[0][437] = 0.97004; hd[1][437] = 0.96921; bw[0][437] = 0.00083; bw[1][437] = 0.00083;
	hd[0][438] = 0.96974; hd[1][438] = 0.96719; bw[0][438] = 0.00255; bw[1][438] = 0.00255;
	hd[0][439] = 0.96854; hd[1][439] = 0.96785; bw[0][439] = 0.00069; bw[1][439] = 0.00069;
	hd[0][440] = 0.96827; hd[1][440] = 0.96783; bw[0][440] = 0.00044; bw[1][440] = 0.00044;
	hd[0][441] = 0.96824; hd[1][441] = 0.96766; bw[0][441] = 0.00058; bw[1][441] = 0.00058;
	hd[0][442] = 0.96786; hd[1][442] = 0.96743; bw[0][442] = 0.00043; bw[1][442] = 0.00043;
	hd[0][443] = 0.96806; hd[1][443] = 0.96744; bw[0][443] = 0.00062; bw[1][443] = 0.00062;
	hd[0][444] = 0.96839; hd[1][444] = 0.96762; bw[0][444] = 0.00077; bw[1][444] = 0.00077;
	hd[0][445] = 0.96816; hd[1][445] = 0.96761; bw[0][445] = 0.00055; bw[1][445] = 0.00055;
	hd[0][446] = 0.96801; hd[1][446] = 0.96763; bw[0][446] = 0.00038; bw[1][446] = 0.00038;
	hd[0][447] = 0.96851; hd[1][447] = 0.96733; bw[0][447] = 0.00118; bw[1][447] = 0.00118;
	hd[0][448] = 0.96847; hd[1][448] = 0.96778; bw[0][448] = 0.00069; bw[1][448] = 0.00069;
	hd[0][449] = 0.96846; hd[1][449] = 0.96768; bw[0][449] = 0.00078; bw[1][449] = 0.00078;
	hd[0][450] = 0.96866; hd[1][450] = 0.9673; bw[0][450] = 0.00136; bw[1][450] = 0.00136;
	hd[0][451] = 0.9679; hd[1][451] = 0.96699; bw[0][451] = 0.00091; bw[1][451] = 0.00091;
	hd[0][452] = 0.96788; hd[1][452] = 0.96722; bw[0][452] = 0.00066; bw[1][452] = 0.00066;
	hd[0][453] = 0.96853; hd[1][453] = 0.96727; bw[0][453] = 0.00126; bw[1][453] = 0.00126;
	hd[0][454] = 0.96877; hd[1][454] = 0.96748; bw[0][454] = 0.00129; bw[1][454] = 0.00129;
	hd[0][455] = 0.97415; hd[1][455] = 0.96784; bw[0][455] = 0.00631; bw[1][455] = 0.00631;
	hd[0][456] = 0.97586; hd[1][456] = 0.9729; bw[0][456] = 0.00296; bw[1][456] = 0.00296;
	hd[0][457] = 0.97633; hd[1][457] = 0.97257; bw[0][457] = 0.00376; bw[1][457] = 0.00376;
	hd[0][458] = 0.973; hd[1][458] = 0.97128; bw[0][458] = 0.00172; bw[1][458] = 0.00172;
	hd[0][459] = 0.97319; hd[1][459] = 0.97133; bw[0][459] = 0.00186; bw[1][459] = 0.00186;
	hd[0][460] = 0.97418; hd[1][460] = 0.97202; bw[0][460] = 0.00216; bw[1][460] = 0.00216;
	hd[0][461] = 0.97383; hd[1][461] = 0.97286; bw[0][461] = 0.00097; bw[1][461] = 0.00097;
	hd[0][462] = 0.97303; hd[1][462] = 0.97245; bw[0][462] = 0.00058; bw[1][462] = 0.00058;
	hd[0][463] = 0.97297; hd[1][463] = 0.97235; bw[0][463] = 0.00062; bw[1][463] = 0.00062;
	hd[0][464] = 0.97314; hd[1][464] = 0.97194; bw[0][464] = 0.0012; bw[1][464] = 0.0012;
	hd[0][465] = 0.97305; hd[1][465] = 0.97183; bw[0][465] = 0.00122; bw[1][465] = 0.00122;
	hd[0][466] = 0.97288; hd[1][466] = 0.97193; bw[0][466] = 0.00095; bw[1][466] = 0.00095;
	hd[0][467] = 0.97301; hd[1][467] = 0.97205; bw[0][467] = 0.00096; bw[1][467] = 0.00096;
	hd[0][468] = 0.97258; hd[1][468] = 0.97155; bw[0][468] = 0.00103; bw[1][468] = 0.00103;
	hd[0][469] = 0.97191; hd[1][469] = 0.97136; bw[0][469] = 0.00055; bw[1][469] = 0.00055;
	hd[0][470] = 0.9717; hd[1][470] = 0.97103; bw[0][470] = 0.00067; bw[1][470] = 0.00067;
	hd[0][471] = 0.97204; hd[1][471] = 0.97129; bw[0][471] = 0.00075; bw[1][471] = 0.00075;
	hd[0][472] = 0.97233; hd[1][472] = 0.97169; bw[0][472] = 0.00064; bw[1][472] = 0.00064;
	hd[0][473] = 0.97285; hd[1][473] = 0.97167; bw[0][473] = 0.00118; bw[1][473] = 0.00118;
	hd[0][474] = 0.97456; hd[1][474] = 0.97246; bw[0][474] = 0.0021; bw[1][474] = 0.0021;
	hd[0][475] = 0.97312; hd[1][475] = 0.97177; bw[0][475] = 0.00135; bw[1][475] = 0.00135;
	hd[0][476] = 0.97373; hd[1][476] = 0.9718; bw[0][476] = 0.00193; bw[1][476] = 0.00193;
	hd[0][477] = 0.97345; hd[1][477] = 0.9719; bw[0][477] = 0.00155; bw[1][477] = 0.00155;
	hd[0][478] = 0.97301; hd[1][478] = 0.97189; bw[0][478] = 0.00112; bw[1][478] = 0.00112;
	hd[0][479] = 0.97329; hd[1][479] = 0.97243; bw[0][479] = 0.00086; bw[1][479] = 0.00086;
	hd[0][480] = 0.9732; hd[1][480] = 0.97206; bw[0][480] = 0.00114; bw[1][480] = 0.00114;
	hd[0][481] = 0.97342; hd[1][481] = 0.97171; bw[0][481] = 0.00171; bw[1][481] = 0.00171;
	hd[0][482] = 0.9728; hd[1][482] = 0.97218; bw[0][482] = 0.00062; bw[1][482] = 0.00062;
	hd[0][483] = 0.97332; hd[1][483] = 0.97279; bw[0][483] = 0.00053; bw[1][483] = 0.00053;
	hd[0][484] = 0.97358; hd[1][484] = 0.97289; bw[0][484] = 0.00069; bw[1][484] = 0.00069;
	hd[0][485] = 0.97377; hd[1][485] = 0.973; bw[0][485] = 0.00077; bw[1][485] = 0.00077;
	hd[0][486] = 0.97357; hd[1][486] = 0.97309; bw[0][486] = 0.00048; bw[1][486] = 0.00048;
	hd[0][487] = 0.9734; hd[1][487] = 0.97269; bw[0][487] = 0.00071; bw[1][487] = 0.00071;
	hd[0][488] = 0.97342; hd[1][488] = 0.97109; bw[0][488] = 0.00233; bw[1][488] = 0.00233;
	hd[0][489] = 0.97347; hd[1][489] = 0.97257; bw[0][489] = 0.0009; bw[1][489] = 0.0009;
	hd[0][490] = 0.97347; hd[1][490] = 0.9732; bw[0][490] = 0.00027; bw[1][490] = 0.00027;
	hd[0][491] = 0.97364; hd[1][491] = 0.9731; bw[0][491] = 0.00054; bw[1][491] = 0.00054;
	hd[0][492] = 0.97326; hd[1][492] = 0.97211; bw[0][492] = 0.00115; bw[1][492] = 0.00115;
	hd[0][493] = 0.97331; hd[1][493] = 0.97248; bw[0][493] = 0.00083; bw[1][493] = 0.00083;
	hd[0][494] = 0.97316; hd[1][494] = 0.97261; bw[0][494] = 0.00055; bw[1][494] = 0.00055;
	hd[0][495] = 0.97313; hd[1][495] = 0.97266; bw[0][495] = 0.00047; bw[1][495] = 0.00047;
	hd[0][496] = 0.97313; hd[1][496] = 0.97256; bw[0][496] = 0.00057; bw[1][496] = 0.00057;
	hd[0][497] = 0.97312; hd[1][497] = 0.97237; bw[0][497] = 0.00075; bw[1][497] = 0.00075;
	hd[0][498] = 0.97361; hd[1][498] = 0.97237; bw[0][498] = 0.00124; bw[1][498] = 0.00124;
	hd[0][499] = 0.97324; hd[1][499] = 0.97225; bw[0][499] = 0.00099; bw[1][499] = 0.00099;
*/
}

/*extern "C" __declspec(dllexport) int MTSaveClientInfo(int paramCnt, char* paramOverride, char* pDBCtx, char* pCurrentBar, int pDoTraining, int pDoRun);
extern "C" __declspec(dllexport) int MTOraConnect(int paramCnt, char* paramOverride, char* oCtxS);
extern "C" __declspec(dllexport) void MTOraDisconnect(int paramCnt, char* paramOverride, char* pLogDBCtxS, int pCommit);
*/
#include <MyTimeSeries.h>
#include <DataShape.h>

/*
int main(int argc, char* argv[]) {

	int dscnt = 2;
	int hlen = 20;
	double** hd = MallocArray<double>(dscnt, hlen);
	double** bw = MallocArray<double>(dscnt, hlen);
	loadStaticData(hd, nullptr, bw);

	double** hd_tr = MallocArray<double>(dscnt, hlen);
	double** hd_trs = MallocArray<double>(dscnt, hlen);
	double** hd_uns = MallocArray<double>(dscnt, hlen);
	double** hd_untr = MallocArray<double>(dscnt, hlen);
	double dataMin;
	double scaleM, scaleP;
	bool check = true;
	double epsilon=1e-8;
	int d = 0;

	dataTransform(DT_DELTALOG, hlen, hd[d], 0, hd_tr[d]);
	DataScale(hlen, hd_tr[d], -1, 1, hd_trs[d], &scaleM, &scaleP);
	DataUnScale(hlen, 0, hlen, hd_trs[d], scaleM, scaleP, hd_uns[d]);
	dataUnTransform(DT_DELTALOG, hlen, 0, 20, hd_tr[d], 0, hd[d], hd_untr[d]);

	for (int i = 0; i<hlen; i++) {
		if ((hd_untr[0][i]-hd[0][i])>epsilon) {
			check = false;
		}
	}

	char sCtx[30];
	char* vParams = "MT4 --IniFile=c:/temp/Forecaster.ini";
	if (MTOraConnect(1, vParams, sCtx)<0) return -1;
	int ret = MTSaveClientInfo(1, vParams, sCtx, "201708100700", 0, 0);
	MTOraDisconnect(1, vParams, sCtx, 1);
	return ret;

	return 0;
}
*/


//-- newRNN client

#include <MyTimeSeries.h>
#include <cuRNN.h>

int main(int argc, char* argv[]) {

	tDebugInfo* DebugParms = new tDebugInfo;
	DebugParms->DebugLevel = 2;
	DebugParms->DebugDest = LOG_TO_TEXT;
	DebugParms->PauseOnError = 1;
	strcpy(DebugParms->fPath, "C:/temp");
	strcpy(DebugParms->fName, "kaz.log");


	tFXData* FxData = new tFXData;
	strcpy(FxData->FXDB->DBUser, "History");
	strcpy(FxData->FXDB->DBPassword, "HistoryPwd");
	strcpy(FxData->FXDB->DBConnString, "Algo");
	strcpy(FxData->Symbol, "EURUSD");
	strcpy(FxData->TimeFrame, "H1");

	char* date0 = "201710010000";
	int historyLen = 100000;
	int sampleLen = 200;
	int inputSize = 5;	// OHLCV
	int sampleCnt = (int)floor(historyLen / sampleLen);
	int batchSize = 250;
	int batchCnt = (int)floor(sampleCnt / batchSize);
	int hiddenSize = 500;
	int RNNlayers = 2;
	bool bidirectional = false;
	int RNNmode = CUDNN_RNN_TANH;
	float RNNdropout = 0.6f;

	//float**** hd = MallocArray<float>(batchCnt, batchSize, sampleLen, inputSize);
	float*  hd  = MallocArray<float>(batchCnt*batchSize*sampleLen*inputSize);
	float** hdb = MallocArray<float>(batchCnt, batchSize*sampleLen*inputSize);
	float*  fd  = MallocArray<float>(batchCnt*batchSize*(sampleLen - 1)*inputSize);
	float** fdb = MallocArray<float>(batchCnt, batchSize*(sampleLen - 1)*inputSize);

	if(LoadHistoryAndFutureData_Flat(DebugParms, FxData, date0, historyLen, sampleLen, hd, fd) <0) return -1;
	for (int b = 0; b < batchCnt; b++) {
		memcpy(hdb[b], &hd[b*batchSize*sampleLen*inputSize], batchSize*sampleLen*inputSize);
	}
	if(RNNtrain(sampleLen, inputSize, hiddenSize, RNNlayers, batchCnt, batchSize, bidirectional, RNNmode, RNNdropout, hdb, fdb))

	FreeArray(batchCnt*batchSize*sampleLen*inputSize, hd);

	//FreeArray<float>(batchCnt, batchSize, sampleLen, 4, hd);
}